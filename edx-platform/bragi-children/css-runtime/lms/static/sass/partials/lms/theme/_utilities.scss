/* --------------------------------

Other Components

-------------------------------- */
// Row
//
// Rows contain and clear the floats of your columns.

@if $enable-grid-classes {
  .row {
    @include make-row();
  }

  // Remove the negative margin from default .row, then the horizontal padding
  // from all immediate children columns (to prevent runaway style inheritance).
  .no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*="col-"] {
      padding-right: 0;
      padding-left: 0;
    }
  }
}

// Columns
//
// Common styles for small and large grid columns

@if $enable-grid-classes {
  @include make-grid-columns();
}

// Mixins
@mixin content-wrapper {
  width: 100%;
  min-width: 0;
  max-width: 1180px;
  margin: 0 auto;
}

@mixin link-color($color, $hover-color) {
  color: $color;

  &:link,
  &:visited {
    color: $color;
  }

  &:hover,
  &:focus,
  &:visited:hover,
  &:visited:focus {
    color: $hover-color;
    text-decoration: none;
  }
}

@mixin animtation-pulse {
  transition: transform .3s ease;

  &:hover {
    transform: scale3d(1.05, 1.05, 1.05);
  }
}

// ghost items for extends
%container-wrapper {
  @include content-wrapper;
  padding: 1.5rem;
  background: var(--pgn-color-white);
  border-radius: 3px;
  box-shadow: 0 0 20px rgba(0,0,0,.04);
}


%intro-banner {
  position: relative;
  height: 50vh;
  background-size: cover;
  background-position: center;
  box-shadow: inset 0 0 5rem rgba(0, 0, 0, .5);

  &::before {
    content: '';
    position: absolute;
    display: block!important;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $extend-intro-banner-background-color;
  }

  > div {
    z-index: 10;
  }
}

// animations
@keyframes opacity {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@mixin button-size-edx($padding-y, $padding-x, $font-size, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  @include border-radius($border-radius);
}

// Buttons
@mixin var-button-variant(
  $background,
  $border,
  $hover-background,
  $hover-border,
  $active-background,
  $active-border,
  $background-yiq,
  $custom-background-gradient,
  $background-gradient
) {
  color: $background-yiq;
  @include var-gradient-bg($background, $background-gradient);
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover() {
    color: $background-yiq;
    @include var-gradient-bg($hover-background, $background-gradient);
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    color: $background-yiq;
    @include var-gradient-bg($hover-background, $background-gradient);
    border-color: $hover-border;
    @if $enable-shadows {
      @include box-shadow(
        $btn-box-shadow,
        0 0 0 $btn-focus-width $custom-background-gradient
      );
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: 0 0 0 var(--pgn-size-btn-focus-width) $custom-background-gradient;
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: $background-yiq;
    background-color: $background;
    border-color: $border;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: $background-yiq;
    background-color: $active-background;
    @if $enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }
    border-color: $active-border;

    &:focus {
      @if $enable-shadows and $btn-active-box-shadow != none {
        @include box-shadow(
          $btn-active-box-shadow,
          0 0 0 $btn-focus-width $custom-background-gradient
        );
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 var(--pgn-size-btn-focus-width) $custom-background-gradient;
      }
    }
  }
}

@mixin var-gradient-bg($var-color, $var-gradient-color) {
  //Define this var with mix(var(--pgn-color-body-bg), $var-color, 15%)

  @if $enable-gradients {
    background: $var-color
      linear-gradient(180deg, $var-gradient-color, $var-color)
      repeat-x;
  } @else {
    background-color: $var-color;
  }
}
